<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Bootstrap demo</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
</head>

<body class="bg-dark">
  <nav class="navbar bg-dark bg-body-tertiary" data-bs-theme="dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Заметки</a>
    </div>
  </nav>

  <div class="container mt-3 mb-3">
    <div id="notes">
    </div>


    <nav aria-label="Page navigation example">
      <a type="button" class="btn btn-success w-100 mt-3" href="/create">Новая заметка</a>
      <ul class="pagination mt-3">
        <li class="page-item"><a class="page-link" href="#" id="prevPage"><</a>
        </li>
        <li class="page-item"><a class="page-link" href="#" id="curPage">1</a></li>
        <li class="page-item"><a class="page-link" href="#" id="nextPage">></a></li>
      </ul>
    </nav>
  </div>

  <script>
    const urlParams = new URLSearchParams(window.location.search);
    let page = parseInt(urlParams.get("page"));

    function noteCards(notes) {
      let out = "";
      for (const key in notes) {
        let note = notes[key];

        if (note['createdAt'] == note['updatedAt']){
          let date = note['createdAt'];

          date = date.replace("T", " ").split(".")[0];
          out += `<div class="card mt-1">
                  <div class="card-body" data-bs-theme="dark">
                    <h5 class="card-title">${note['title']}</h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary">Создана ${date}</h6>
                    <p class="card-text">${note['text']}</p>
                    <a type="button" class="btn btn-warning" href="/edit?note=${note['id']}">Редактировать</a>
                  </div>
                </div>`
        } else {
          let date = note['updatedAt'];

          date = date.replace("T", " ").split(".")[0];
          out += `<div class="card mt-1">
                  <div class="card-body" data-bs-theme="dark">
                    <h5 class="card-title">${note['title']}</h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary">Обновлена ${date}</h6>
                    <p class="card-text">${note['text']}</p>
                    <a type="button" class="btn btn-warning" href="/edit?note=${note['id']}">Редактировать</a>
                  </div>
                </div>`
        }

        
      }

      document.querySelector("#notes").innerHTML = out;
    }

    async function main() {
      let req = await fetch("/api/notes/count");

      let pages = Math.ceil((parseInt(await req.text()) + 1) / 3);

      if (page == 1) {
        document.querySelector("#prevPage").style.display = "none";
        document.querySelector("#curPage").textContent = page.toString();
        document.querySelector("#nextPage").href = `/list?page=${page + 1}`;
      } else if (page > pages) {
        window.location = `/list?page=${pages}`;
      } else {
        document.querySelector("#prevPage").href = `/list?page=${page - 1}`;
        document.querySelector("#curPage").textContent = page.toString();
        document.querySelector("#nextPage").href = `/list?page=${page + 1}`;
      }

      if (page + 1 > pages) {
        document.querySelector("#nextPage").style.display = "none";

        if (page == 1) {
          document.querySelector("#curPage").style.display = "none";
        }
      }

      let req2 = await fetch(`/api/notes?count=3&offset=${(page-1) * 3}`);

      noteCards(await req2.json());
    }

    main()
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>
</body>

</html>